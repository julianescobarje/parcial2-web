{
	"info": {
		"_postman_id": "4bf700d8-ab7a-40d5-91ef-2c3b529b373f",
		"name": "Clases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11028888"
	},
	"item": [
		{
			"name": "Crear un profesor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"profesor_id\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"cedula\": 1,\r\n  \"nombre\": \"profesor-ejemplo\",\r\n  \"grupoInvestigacion\": \"IMAGINE\",\r\n  \"extension\": 234,\r\n  \"rol\": \"Profesor\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una clase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"clase_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"IP\",\r\n  \"codigo\": \"ISIS122121\",\r\n  \"creditos\": 3,\r\n  \"profesor\": {\r\n    \"id\": \"{{profesor_id}}\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clases",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una clase sin un profesor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message contains expected errors\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const expectedMessages = [\r",
							"        \"profesor should not be empty\",\r",
							"        \"profesor must be an object\"\r",
							"    ];\r",
							"    pm.expect(jsonData.message).to.eql(expectedMessages);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"EDA\",\r\n    \"codigo\": \"ISIS122522\",\r\n    \"creditos\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clases",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una clase con un profesor invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"El mensaje de error es el correcto\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('Usuario no encontrado.');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"DPOO\",\r\n  \"codigo\": \"ISIS122622\",\r\n  \"creditos\": 3,\r\n  \"profesor\": {\r\n    \"id\": \"6f8a2b8b-2c37-48c9-995d-8d09b3e8c52f\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clases",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una decana",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"decana_id\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"cedula\": 2,\r\n  \"nombre\": \"decana-ejemplo\",\r\n  \"grupoInvestigacion\": \"TICSW\",\r\n  \"extension\": 12345678,\r\n  \"rol\": \"Decana\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una clase con una decana",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"El mensaje de error es el correcto\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('El usuario debe ser un Profesor para crear una clase.');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"DSW\",\r\n  \"codigo\": \"ISIS260323\",\r\n  \"creditos\": 3,\r\n  \"profesor\": {\r\n    \"id\": \"{{decana_id}}\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clases",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una clase con un código invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"El mensaje de error es el correcto\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('El código debe tener exactamente 10 caracteres.');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"ASW\",\r\n  \"codigo\": \"ISIS2503\",\r\n  \"creditos\": 3,\r\n  \"profesor\": {\r\n    \"id\": \"{{profesor_id}}\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clases",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una clase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clases/{{clase_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases",
						"{{clase_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una clase invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"El mensaje de error es el correcto\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"Clase no encontrada.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clases/6f8a2b8b-2c37-48c9-995d-8d09b3e8c52f",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clases",
						"6f8a2b8b-2c37-48c9-995d-8d09b3e8c52f"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}